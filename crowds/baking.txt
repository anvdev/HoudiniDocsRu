= Сохранение данных агента на диск =

== Обзор ==

У вас есть персонаж с циклами анимации, и вы хотите использовать его как агента в симуляции толпы. Система толпы не работает напрямую с персонажами. Вместо этого, вы создаете примитив агента из персонажа. В примитиве агента содержится сведения о персонаже (например риг) и так же особая информация толпы.

NOTE:
    Система толп обычно предполагает, что ваши персонажи это [цифровые ассеты|/assets/]. Использование персонажей как ассетов, хорошая идея и их гораздо легче использовать чем персонажей, созданных из отдельных объектов.

Когда вы тестируете относительно небольшое количество агентов, вы можете настроить SOPs для получения необходимых данных из Houdini. Однако, это неэффективно, так как Houdini необходимо приготовить сеть персонажей, что бы получить финальную геометрию для симуляции.

Когда вы масштабируете толпу до больших размеров и производите рендер, вам необходимо _сохранить_ данные агента в более эффективную форму на диск. Это имеет несколько преимуществ перед, прямым получением данных из Houdini.

* Быстрее получить данные из сохраненного файла, чем заного готовить сцену в Houdini. 

* Рендер может эффективно загружать информацию с сохраненных файлов, которая необходима ему для текущего кадра.

* Сохраненные файлы могут быть разделены между несколькими IFD, несколькими рендерами и несколькими сценами.

Единожды сохранив данные агента, вы работаете с ними, а не с исходным персонажем. И только когда вы измените исходного персонажа, анимацию или мокап вам нужно перезаписать файлы.

Возможно, вы захотите создать файл сцены только для сохранения данных персонажа, не используя его как часть реальной сцены толпы.

Обычно, вы можете работать с сохраненными файлами агентов как с текстурами. Вы создаете их одни раз, возможно, проверяете их в системе управления ресурсами, повторно используете их, и пересоздаете только когда что-то изменяется в самих файлах или файлах, от которых зависят текущие ("upstream").

Смотрите [создание симуляции|setup] как использовать файлы агента после их сохранения на диск.

== Настроить персонажа для сохранения на диск ==

# Создайте экземпляр ассета персонажа и настройте анимационный цикл.

# На полке  __Толп (Crowds)__, нажмите [Icon:SHELF/bake_character][Bake Agent|/shelf/crowds_bakeagent].

# Введите имя "класса агента", например `footsoldier`. Оно будет одинаково для разных циклов анимации одного и того же персонажа.
    
    Нажмите __Accept  (Принять)__.

# Введите имя текущего анимационного клипа, например `walk (ходьба)`. Нажмите __Accept (Принять)__.

    * Инструмент создает ROP сеть для сохранения агентов на диск, если она уже не создана.

    * Внутри ROP сети, инструмент создает [ноду render|Node:out/agent] для сохранения конкретного клипа анимации.

== Сохранить файлы агента на диск ==

# Перейдите на уровень объектов (OBJ) и выделите ROP сеть (`agent_bake`).

# В параметрах ноды __Cache directory (директория кэша)__ указывается где рендер ноды будут хранить его файлы (Инструмент автоматически настраивает ссылки на ROP ноды, которые обращаются к этому параметру).

    По умолчанию используется `$HIP/agents`, то есть файлы будут записаны в папку рядом с текущем файлом сцены. Вы можете изменить его на `$JOB` используйте [управление проектом|/basics/project]. Или вы можете изменить его на пользовательское для вашего проект\сайта.

# В редакторе параметров (parameter editor), нажмите __Render__ для сохранения всех клипов.

TIP:
    Вы можете зайти внутрь ROP сети, что-бы пересохранить отдельный клип.

== Сохранение различных анимационных клипов ==

Вам нужно сохранить каждый анимационный клип (например, цикл ходьбы) агента. У разных людей разные понятия о том, как связать анимацию с персонажами, поэтому инструменты полки не могут создать анимацию персонажей за вас.

Вам нужно убедиться, что когда ROP нода сохраняет текущей клип, персонаж выполняет правильную анимацию.

* Если ваш ассет имеет параметр установки анимационного цикла персонажа, вы должны создать отдельные экземпляры ассета, установить в каждом разную анимацию, и затем сохранить на диск каждый.

* Вы можете настроить каждую анимацию в отдельном [take|/basics/takes], сохранить её, и затем в ROP ноде для клипа установить для сохранения take соответствующего клипа.







= Box =

#type: node
#context: sop
#internal: box
#icon: SOP/box
#tags: create, model

"""Создает куб или любой бокс."""

TIP:
    Если подать геометрию на вход ноды Box, то вокруг нее создастся ограничивающий бокс (это повторяет функциональность ноды [Bound node|Node:sop/bound]). Эту функцию также можно использовать для создания клетки в сочетании с [нодой Lattice|Node:sop/lattice].

[Include:/shelf/box#placing]

Для получения дополнительной информации см. раздел [Манипуляторы Box|/basics/handles#box].

@parameters
    Primitive Type:
        Тип создаваемой геометрии.

        Polygon:
            Строит бокс из прямоугольных полигонов.
        Polygon mesh:
            Строит бокс из полигональной сетки, состоящей из множества полигонов. Параметр __Axis divisions__ отвечает за управление количеством полигонов.
        Mesh:
            Создает примитив сетки. Примитив сетки это единый примитив, который имеет естественную UV развертку, который нельзя разделить на отдельные полигоны, в отличие от полигональной сетки, которая состоит из отдельных полигонов.

            В большинстве случаев используется не __Mesh__, а __Polygon mesh__.

        NURBS:
            Строит бокс из шести поверхностей NURBS. Параметр __Axis divisions__ отвечает за управление количеством контрольных вершин.
        Bezier:
            Строит бокс из шести поверхностей Bezier.

        Points:
            Не строит геометрию, а создает только точки. При включенном параметре divisions, точки создаются в том же порядке, что и в режиме Polygon. В противном случае порядок точек будет таким же как в режиме Polygon mesh.

    Connectivity:
        Параметр доступен во всех режимах кроме __Polygon__. Переключает варианты построения бокса. При выбранном режиме NURBS или Bezier игнорируются варианты "triangles" и "quads".

        Варианты  "row" и "column" вместо поверхностей создают линии (полилинии или кривые, в зависимости от выбранного __Primitive type__).


        Rows:
            Создает горизонтальные линии.
        Columns:
            Создает вертикальные линии.
        Rows & Cols:
            Создает и горизонтальные и вертикальные линии.
        Triangles:
            Строит грани из треугольников. Каждый прямоугольник делится пополам на два треугольника, а разделительные линии повернуты в одинаковом направлении.
        Quadrilaterals:
            Строит грани из прямоугольников.
        Alternating Triangles:
            Строит полигональную сетку с чередующимися треугольниками. Каждый прямоугольник делится пополам на два треугольника, а разделительные линии чередуют направления.
        Reverse Triangles:
            Строит грани из треугольников повернутых в обратном направлении. Каждый прямоугольник делится пополам на два треугольника, а разделительные линии повернуты в одинаковом (но обратном) направлении.
        
    Consolidate Corner Points:
        Объединяет угловые точки граней бокса.

    Size:
        #channels: /sizex /sizey /sizez

        Размер бокса по xyz осям.
    Center:
        #channels: /tx /ty /tz

        Позиция центра бокса.
    Uniform Scale:
        #channels: /scale

        Равномерное масштабирование.
    Axis Divisions:
        #channels: /divrate

        Число делений вдоль каждой оси.
        Параметр доступен при режимах __Polygon Mesh__ или __Mesh__.

    Axis Orders:
        #channels: /orderrate

        Порядок поверхности на каждой оси.
    Divisions:
        #channels: /divsx /divsy /divsz

        Параметр доступен в режимах __Polygon__ или __Points__. Создает решетку, которую можно использовать с нодами [Lattice deformer|Node:sop/lattice] или [Spring|Node:sop/spring]. Поля отвечают за количество делений решетки по каждой оси.

	Если точки внутри бокса не требуются, то можно использовать Axis Divisions в режимах __Polygon Mesh__ или __Mesh__.
    Enforcement Bars:
        Параметр доступен в режиме __Polygon__ при включенном параметре __Divisions__. Строит диагональные линии между точками решетки. Такую решетку можно использовать с нодой [Spring|Node:sop/spring].
    Oriented Bounding Box:
        Параметр доступен, если на входе есть геометрия. Ориентирует бокс не по мировым осям, а в соответствии с входной геометрией.
        
        Этот алгоритм основывается на точках и поэтому требуются примитивы с вершинами. Например, алгоритм не будет работать с примитивом сферы. Чтобы получить ограничивающий бокс примитива сферы, сначала [преобразуйте|Node:sop/convert] ее в полигоны.
    Add Vertex Normals:
        Добавляет боксу нормали вершин, чтобы он имел явно выраженные грани.
        
@inputs
    Bounding source:
        Если подать геометрию на вход, то для нее создастся ограничивающий бокс. (В противном случае будут использоваться параметры, отвечающие за позицию и размер бокса). Параметр __Oriented bounding box__ ориентирует бокс не по мировым осям, а в соответствии с входной геометрией.

:bubble:
    #dir: right
    #display: gray
    [English version of this page|http://www.sidefx.com/docs/houdini/nodes/sop/box]

@related
    - [Node:sop/bound]
    - [Node:sop/lattice]
    - [Node:sop/spring]


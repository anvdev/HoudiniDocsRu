= VEX =

"""VEX - это высокопроизводительный язык выражений, используемый во многих местах в Houdini, например, для написания шейдеров."""

VEX обычно очень эффективно исполняется, обеспечивая производительность, близкую к скомпилированному C / C ++ коду. VEX не является альтернативой [скриптам|/hom/], а скорее меньшим, более эффективным языком общего назначения для написания шейдеров и пользовательских нод.

VEX основан на языке C, но заимствует идеи как из C++, так и [RenderMan shading language|Wp:RenderMan_Shading_Language].

Места, в которых используется VEX в Houdini:

* Рендеринг -- Mantra использует VEX для всех [шейдинг|Wp:Shading] вычислений. Включая light, surface, displacement и fog шейдеры.
    
* [Композитинг|/composite/] -- [VEX Generator|Node:cop2/vexgenerate] и [VEX Filter|Node:cop2/vexfilter] COPs позволяют создавать сложные пользовательские COPs на VEX. Выражения очень близки к скоростям C/C++ и работают в 1000 раз быстрее, чем Pixel Expression COP.

* [Частицы|/particles/] -- [POP VOP|Node:dop/popvop] позволяет делать почти все, что POPs могут делать сами. Возможно написать одну VEX функцию, которая выполнит задачу нескольких POPs. Так как VEX код находится в одном операторе, он, как правило, выполняется быстрее сети POPs.

* [Моделирование|/model/] -- [VEX SOP|Node:sop/vex] позволяет написать пользовательскую ноду для контекста поверхностей, которая управляет атрибутами геометрии и других SOPs. Управление атрибутами позволяет перемещать точки, регулировать скорости, изменять цвета. Кроме того, можно работать с группами и делать множество других полезных задач. VEX SOPs обычно работают в 10 и более раз быстрее, чем Point SOP.

* [CHOPs|/nodes/chop/] -- [VEX CHOP|Node:chop/vex] позволяет настраивать CHOPs. CHOP функции могут манипулировать произвольным количеством входных каналов и данных и обрабатывать данные канала произвольными способами. В некоторых случаях код VEX может работать быстрее, чем скомпилированный код на C++.

* [Волосы и Шерсть|/fur/] -- Процедурное поведение шерсти реализовано на VEX.

:bubble:
    #dir: right
    #display: gray
    [English version of this page|http://www.sidefx.com/docs/houdini/vex/index]

@subtopics

== Язык ==

:: [lang]
:: [statement]
:: [arrays]
:: [Компилятор VEX (vcc)|vcc]
:: [Псевдокомментарии компилятора VEX (Pragmas)|pragmas]
:: [shadercalls]

== Следующие шаги ==

:: [Использование VEX выражений|snippets]
:: [geometry]
:: [attrib_suite]
:: [Написание PBR шейдеров на VEX|pbr]
:: [cookbook]
:: [Полурёбра (half-edges)|halfedges]
:: [random]
:: [Создание SOP или POP нод с помощью VOP или VEX|sopnodes]
:: [VOP структуры|vop_structs]
:: [Использование утверждений в VEX|assertions]

== Справочная информация ==

:: [Контексты VEX|contexts/]
:: [functions/]
:: [Работа со строками|strings]

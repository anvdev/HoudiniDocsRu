#type: include

:arg:`<geometry>`:
    #id: geometry
    
    При запуске в контексте ноды (например, Wrangle SOP) этот аргумент может быть целым числом, представляющим номер входа (начиная с 0), с которого функция будет читать атрибуты.
    
    В качестве альтернативы аргумент может быть строкой, указывающей на файл геометрии (например, `*.bgeo`) для чтения. При запуске внутри Houdini может быть ссылкой `op:/путь/до/sop`.

:arg:opinput:
    #id: opinput_arg
    
    Номер входа для чтения, начиная с 0. Например, номер первого входа - `0`, второй - `1`, и так далее.

:arg:opinput:
    #id: chop_opinput_arg
    
    Номер входа для чтения, начиная с 0. Например, номер первого входа - `0`, второй - `1`, и так далее.
    
    Если вы укажете `-1`, функция будет использовать текущий узел CHOP или вход `0`, если он имеет подключение.

:arg:geometry:
    #id: geometry_output
    
    Строка, указывающая на файл геометрии (например, `*.bgeo`) для чтения. При запуске внутри Houdini может быть ссылкой `op:/путь/до/sop`.

:arg:geohandle:
    #id: geohandle_arg
    
    Идентификатор геометрии для записи. В настоящее время единственным допустимым значением является `0` или [Vex:geoself], что означает текущую геометрию в ноде. Этот аргумент может использоваться в будущем, чтобы разрешить запись в другие геометрии.

:arg:attribclass:
    #id: attribclass
    
    Один из `"detail"` (или `"global"`), `"point"`, `"prim"`, или `"vertex"`.
    
    Вы также можете использовать `"primgroup"`, `"pointgroup"` или `"vertexgroup"` для [чтения из групп|/vex/groups].

:arg:attribute_name:
    #id: attribname
    
    Имя атрибута (или встроенной функции - "intrinsics") для чтения.

:arg:elemnum:
    #id: elemnum
    
    Номер точки/примитива/вершины для чтения значения атрибута. Для атрибутов класса `detail` используйте `0` (аргумент игнорируется для атрибутов класса `detail`).
    
    Для получения линейного номера вершины по заданному номеру примитива и номеру его вершины, используйте функцию [Vex:primvertex].

:arg:intrinsic_name:
    #id: intrinsicname
    
    Имя встроенной функции для чтения. Например, `"pointattributes"`, `"pointcount"`, или `"bounds"`.

:null:
    #id: attrib_typeinfo_values
    
    `"none"` |
        Don't transform.
    `"point"` |
        Apply scales, rotations, and transformations.
    `"hpoint"` |
        Apply scales, rotations, and transformations to this vector4.
    `"vector"` |
        Apply scales and rotations, but not transformations.
    `"normal"` |
        Apply rotations, apply scales with inverse-transpose.
    `"color"` |
        Don't transform.
    `"matrix"` |
        Apply scales, rotations, and transformations to this matrix.
    `"quaternion"` |
        Apply rotations.
    `"indexpair"` |
        Don't transform.
    `"integer"` |
        Do not blend this value when points are averaged.
    `"integer-blend"` |
        Integer values that blend when points are averaged.

:null:
    #id: set_attrib_info
    
    :returns:
        Возвращает значение `geohandle` в случае успеха и `-1` при неудаче.
    
    NOTE:
        Если атрибут не существует, эта функция *создаст атрибут* со значением по умолчанию равным нулю, пустой строке или пустому массиву. Если же вы хотите контролировать значение по умолчанию для числового атрибута, используйте функцию [Vex:addattrib] перед записью атрибута.

:arg:mode:
    #id: set_attrib_mode
    
    (Необязательно) Если задан, определяет, как функция изменяет любое существующее значение в атрибуте.

    `"set"` |
        Перезаписать существующее значение заданным.
    `"add"` |
        Сложить заданное значение и существующее.
    `"min"`, `"minimum"` |
        Записать минимальное из заданного значения и существующего.
    `"max"`, `"maximum"` |
        Записать максимальное из заданного значения и существующего.
    `"mult"`, `"multiply"` |
        Перемножить заданное значение и существующее. Для матриц - матричное умножение. Для векторов - покомпонентное.
    `"toggle"` |
        Переключить атрибут независимо от исходного значения. Полезно для включения членства в группе.
    `"append"` |
        Данный режим действителен лишь для атрибутов строки и массива. Добавляет заданное значение в конец существующего.

:arg:linearvertex:
    #id: linearvertex
    
    Линейный индекс вершины.
    Если у вас известны номер точки и номер вершины, вы можете использовать функцию [Vex:vertexindex] для преобразования их в линейный индекс вершины.

:null:
    #id: noiselinks

    - [/vex/random]
    - [Vex:anoise]
    - [Vex:curlnoise]
    - [Vex:flownoise]
    - [Vex:noise]
    - [Vex:onoise]
    - [Vex:pnoise]
    - [Vex:snoise]
    - [Vex:vnoise]
    - [Vex:wnoise]
    - [Vex:xnoise]

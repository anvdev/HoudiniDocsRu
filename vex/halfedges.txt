= Полуребра (half-edges) =

"""VEX имеет функции для работы с ребрами каждого полигона как с отдельными "полуребрами"."""

== Обзор ==


[Image:/images/model/half_edge1.png] |
    #width: 33%
    В Houdini ребра обычно обрабатываются как _ненаправленные_ и _общие_ для граней. Однако для некоторых задач (например, упрощения или чистки геометрии) полезно рассматривать грани, будто каждая имеет свои собственные ребра.

[Image:/images/model/half_edge_split.png] |
    Вы можете думать об этом как о разбиении каждого общего ненаправленного ребра вдоль его длины на два _полуребра_. (Ребра на границах, конечно, имеют только одно "полуребро".)

[Image:/images/model/half_edge2.png] |
    Каждое полуребро является _направленным_ (имеет начальную и конечную вершину).

[Image:/images/model/half_edge3.png] |
    Функции для работы с полуребрами позволяют вам быстро находить начальную и конечную вершину полуребра, следующее полуребро, получать другие полуребра того же ребра, а также находить все полуребра, связанные с данной точкой, и выполнять другие манипуляции.

== Эквивалентность ==

Два полуребра считаются _эквивалентными_, если относятся к одному и тому же общему ребру. На следующем рисунке три примитива имеют общее ребро. Полуребра _e_, _f_ и _g_ являются _эквивалентными_, так как относятся к одному и тому же общему ребру. Направленность не имеет значения -- _e_ считается эквивалентным _f_ и _g_, даже если они имеют противоположные направления.

[Image:/images/model/half_edge_equiv.png]

Начальная (и конечная) вершина полуребра однозначно идентифицируют его, что означает, что в качестве источника может быть не более одного полуребра с заданной вершиной. Это связано с тем, что вершина может принадлежать только одному примитиву. Однако, поскольку некоторые вершины могут быть подключены к одной и той же точке, полуребро может иметь общую начальную и конечные _точки_. Другой способ понимания эквивалентности состоит в том, что два полуребра эквивалентны, если их вершины подключены к одним и тем же двум точкам.

В каждом наборе эквивалентных полуребер есть одно _первичное_ (primary) полуребро. Функции VEX позволяют вам проверить, является ли заданное полуребро первичным, а также найти эквивалентное первичное полуребро, если заданное не является первичным.

== Функции ==

[Vex:hedge_isvalid] |
    Проверяет, является ли полуребро действительным
[Vex:hedge_isprimary] |
    Проверяет, является ли полуребро первичным
[Vex:hedge_primary] |
    Находит первичный эквивалент полуребра
[Vex:hedge_isequiv] |
    Проверяет два полуребра на эквивалентность
[Vex:hedge_nextequiv] |
    Перебирает эквивалентные полуребра
[Vex:hedge_equivcount] |
    Получает количество эквивалентных полуребер
[Vex:hedge_srcvertex] |
    Получает начальную вершину полуребра
[Vex:hedge_dstvertex] |
    Получает конечную вершину полуребра
[Vex:hedge_presrcvertex] |
    Получает вершину, предшествующую начальной вершине в примитиве полуребра
[Vex:hedge_postdstvertex] |
    Получает вершину, следующую за конечной вершиной в примитиве полуребра
[Vex:hedge_prim] |
    Получает примитив полуребра
[Vex:hedge_srcpoint] |
    Получает начальную точку полуребра
[Vex:hedge_dstpoint] |
    Получает конечную точку полуребра
[Vex:hedge_presrcpoint] |
    Получает точку, в которую подключена вершина, предшествущая начальной вершине полуребра
[Vex:hedge_postdstpoint] |
    Получает точку, в которую подключена вершина, следующая за конечной вершиной полуребра
[Vex:hedge_next] |
    Получает следующее полуребро в примитиве
[Vex:hedge_prev] |
    Получает предыдущее полуребро в примитиве
[Vex:pointedge] |
    Находит полуребро между двумя точками
[Vex:pointhedge] |
    Находит полуребро с заданной начальной и конечной точками
[Vex:pointhedge] |
    Находит полуребро с заданной начальной точкой
[Vex:pointhedgenext] |
    Перебирает полуребра с заданной начальной точкой
[Vex:vertexhedge] |
    Получает полуребро с заданной начальной вершиной
[Vex:primhedge] |
    Получает полуребро на заданном примитиве

:bubble:
    #dir: right
    #display: gray
    [English version of this page|http://www.sidefx.com/docs/houdini16.5/vex/halfedges]
